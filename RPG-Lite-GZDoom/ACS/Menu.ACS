#library "Menu"
#include "zcommon.acs"
#define PLAYER_TID_START 1000

Function Void inMenuTEXT (Int Selection)
{

	int Lvl = CheckInventory("Playerlevel"),
	EXPBase = GetCvar("MRPG_EXPBase"),
	EXPMULT = GetCvar("MRPG_EXPMULT"),
	Nextlevel = EXPBASE * ((Lvl * EXPMULT) >> 16);
		setfont("SMALLFONT");
		sethudsize (640,400, 1);
		Hudmessage(s:"Stat Menu.";HUDMSG_PLAIN,10,CR_White, 320.0, 140.0,0.2,10);
	
		Hudmessage(s:"Stat Points: ",d:CheckInventory("StatPoints");HUDMSG_PLAIN,11,CR_White, 320.0, 270.0,0.2,10);
	
		Hudmessage(s:"Experience: ",d:CheckInventory("Expereince"),s:" / ",d:Nextlevel;HUDMSG_PLAIN,21,CR_White, 320.0, 280.0,0.2,10);
		Hudmessage(s:"Forward and backward to change selection. use to select";HUDMSG_PLAIN,20,CR_White, 320.0, 340.0,0.2,10);
		
		if(Selection==0)
		{
			HudMessage (s:"Vitality: ",d:CheckInventory("StatVit");
				HUDMSG_PLAIN,12,CR_GOLD, 320.0, 180.0,0.2,10);
			Hudmessage(s:"Increases max health by 2%.";
				HUDMSG_PLAIN,22,CR_White, 320.0, 300.0,0.2,10);
		}
		else
		{
			HudMessage (s:"Vitality: ",d:CheckInventory("StatVit");
				HUDMSG_PLAIN,12,CR_White, 320.0, 180.0,0.2,10);
		}
	
		if(Selection==1)
		{
			HudMessage (s:"Attack: ",d:CheckInventory("StatAtk");
				HUDMSG_PLAIN,13,CR_GOLD, 320.0, 190.0,0.2,10);
			Hudmessage(s:"Increases Damage by 1%.";
				HUDMSG_PLAIN,22,CR_White, 320.0, 300.0,0.2,10);
		}
		else
		{
			HudMessage (s:"Attack: ",d:CheckInventory("Statatk");
				HUDMSG_PLAIN,13,CR_White, 320.0, 190.0,0.2,10);
		}
	
		if(Selection==2)
		{
			HudMessage (s:"Power: ",d:CheckInventory("StatInt");
				HUDMSG_PLAIN,14,CR_GOLD, 320.0, 200.0,0.2,10);
			Hudmessage(s:"Increases Mana by 1.5.";
				HUDMSG_PLAIN,22,CR_White, 320.0, 300.0,0.2,10);
		}
		else
		{
			HudMessage (s:"Power: ",d:CheckInventory("StatInt");
				HUDMSG_PLAIN,14,CR_White, 320.0, 200.0,0.2,10);
		}
	
		if(Selection==3)
		{
			HudMessage (s:"Defense: ",d:CheckInventory("StatDef");
				HUDMSG_PLAIN,16,CR_GOLD, 320.0, 210.0,0.2,10);
			Hudmessage(s:"Decreases damage taken by 0.5% and Reduces knockback.";
				HUDMSG_PLAIN,22,CR_White, 320.0, 300.0,0.2,10);
		}
		else
		{
			HudMessage (s:"Defense: ",d:CheckInventory("StatDef");
				HUDMSG_PLAIN,16,CR_White, 320.0, 210.0,0.2,10);
		}
	
		if(Selection==4)
		{
			HudMessage (s:"Exit Menu";
				HUDMSG_PLAIN,17,CR_GOLD, 320.0, 240.0,0.2,10);
			Hudmessage(s:"Exits the menu.";
				HUDMSG_PLAIN,22,CR_White, 320.0, 300.0,0.2,10);
		}
		else
		{
			HudMessage (s:"Exit Menu";
				HUDMSG_PLAIN,17,CR_White, 320.0, 240.0,0.2,10);
		}
}

script "OpenMenu" (void)
{
	if(CheckInventory("MenuOpen")==1)
	{
		TakeInventory("MenuOpen",1);
		SetPlayerProperty(0, False, PROP_TOTALLYFROZEN);
	}
	else
	{
		GiveInventory("MenuOpen",1);
		ACS_NamedExecuteAlways("inMenu",0);
	}
	Delay(10);
}

script "inMenu" (void)
{
	SetPlayerProperty(0, true, PROP_TOTALLYFROZEN);
	while(CheckInventory("MenuOpen"))
	{
		int button = GetPlayerInput(-1, INPUT_BUTTONS),
		Selection;
	
		if (button & BT_FORWARD)
		{
			if(Selection>0)
			{
				Selection--;
				Delay(5);
			}
		}
	
		else if (button & BT_back)
		{
			if(Selection<4)
			{
				Selection++;
				Delay(5);
			}
		}

		else if (button & BT_USE)
		{
			Switch(Selection)
			{
				case 0:
				if (CheckInventory("statPoints") >= 1)
					{
						TakeInventory("statPoints",1);
						GiveInventory("StatVIT",1);
					}
				Break;
			
				case 1:
				if (CheckInventory("statPoints") >= 1)
					{
						TakeInventory("statPoints",1);
						GiveInventory("StatATK",1);
					}
				Break;
			
				case 2:
				if (CheckInventory("statPoints") >= 1)
					{
						TakeInventory("statPoints",1);
						GiveInventory("StatINT",1);
					}
				Break;
			
				case 3:
				if (CheckInventory("statPoints") >= 1)
					{
						TakeInventory("statPoints",1);
						GiveInventory("StatDEF",1);
					}
				Break;
				
				case 4:
				TakeInventory("MenuOpen",1);
				TakeInventory("MenuSelection",99);
				SetPlayerProperty(0, False, PROP_TOTALLYFROZEN);
				Break;
			}
		Delay(5);
		ACS_NamedExecuteAlways("UpdateStats",0);
		}
	inMenuTEXT(Selection);
	Delay(1);
	}
}